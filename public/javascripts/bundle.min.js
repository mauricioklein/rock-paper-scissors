!function(){return function e(t,r,n){function o(c,a){if(!r[c]){if(!t[c]){var s="function"==typeof require&&require;if(!a&&s)return s(c,!0);if(i)return i(c,!0);var l=new Error("Cannot find module '"+c+"'");throw l.code="MODULE_NOT_FOUND",l}var u=r[c]={exports:{}};t[c][0].call(u.exports,function(e){return o(t[c][1][e]||e)},u,u.exports,e,t,r,n)}return r[c].exports}for(var i="function"==typeof require&&require,c=0;c<n.length;c++)o(n[c]);return o}}()({1:[function(e,t,r){class n{static call(e,t=null,r=null){const n={p1_choice:t,p2_choice:r};return fetch(`/game/${e}`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(n)})}static gameDescription(e){return fetch(`/game/${e}/description`,{method:"GET",headers:{"Content-Type":"application/json"}})}}Object.freeze(n),t.exports=n},{}],2:[function(e,t,r){const n=e("./api_proxy"),o=e("./helper"),i=e("./dom"),c=e("./selector"),a=new i;document.addEventListener("DOMContentLoaded",()=>{n.gameDescription(o.discoverGameType(window.location.pathname)).then(e=>e.json().then(t=>e.ok?t:Promise.reject(t))).then(e=>a.initScreen(e,s)).catch(e=>console.error("Error contacting API: ",e))});const s=e=>{n.call(c.gameType.value,e.target.value).then(e=>e.json().then(t=>e.ok?t:Promise.reject(t))).then(e=>a.renderResult(e)).catch(e=>console.error("Error contacting API: ",e))};c.newGameButton.addEventListener("click",()=>{a.startNewGame()})},{"./api_proxy":1,"./dom":3,"./helper":4,"./selector":5}],3:[function(e,t,r){const n=e("./selector"),o=e("./helper");t.exports=class{initScreen(e,t){const{type:r,options:i}=e;n.title.innerText=r,n.gameType.value=r,i.forEach(e=>{n.player1Container.appendChild(o.createNodeOption(e,t))})}renderResult(e){const t=e.player_1_choice,r=e.player_2_choice,n=e.winner;this.setPlayer1Choice(t),this.setPlayer2Choice(r),this.setWinner(n),this.showResult()}startNewGame(){this.hideResult(),this.showOptions()}setPlayer1Choice(e){Array.prototype.filter.call(n.optionsSelector,t=>t.value!==e).forEach(e=>e.classList.add("hidden"))}setPlayer2Choice(e){n.player2Choice.src=o.imgPath(e)}showOptions(){n.optionsSelector.forEach(e=>e.classList.remove("hidden"))}setWinner(e){n.resultWinner.innerText=o.winnerLine(e)}showResult(){n.player2Container.classList.remove("hidden"),n.resultContainer.classList.remove("hidden")}hideResult(){n.player2Container.classList.add("hidden"),n.resultContainer.classList.add("hidden")}}},{"./helper":4,"./selector":5}],4:[function(e,t,r){class n{static imgPath(e){return`/images/game-options/${e}.png`}static winnerLine(e){switch(e){case"Player 1":return"You won!";case"Player 2":return"You lost!";default:return"Draw!"}}static discoverGameType(e){const t=e.split("/");return t[t.length-1]}static createNodeOption(e,t){const r=document.createElement("input");return r.className="option",r.type="image",r.id=`gameOption-${e}`,r.src=`/images/game-options/${e}.png`,r.value=e,r.onclick=(e=>t(e)),r}}Object.freeze(n),t.exports=n},{}],5:[function(e,t,r){t.exports=class{static get title(){return document.querySelector("#title")}static get player1Container(){return document.querySelector("#player1-container")}static get optionsSelector(){return document.querySelectorAll("[id^=gameOption-]")}static get player2Container(){return document.querySelector("#player2-container")}static get player2Choice(){return document.querySelector("#player2-container > #choice")}static get resultContainer(){return document.querySelector("#result-container")}static get resultWinner(){return document.querySelector("#winner")}static get newGameButton(){return document.querySelector("#new-game")}static get gameType(){return document.querySelector("#gameType")}}},{}]},{},[2]);